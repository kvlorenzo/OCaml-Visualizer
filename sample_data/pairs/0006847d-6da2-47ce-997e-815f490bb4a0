{"bad": "def QuickSort(tab,l,r):\n    p=tab[int((l+r)/2)]\n    i=l\n    j=r\n    while(i<=j):\n        while (tab[i]<p):\n            i=i+1\n        while (tab[j]>p):\n            j=j-1\n        if (i<=j):\n            tmp=tab[i]\n            tab[i]=tab[j]\n            tab[j]=tmp\n            i=i+1\n            j=j-1\n    if (j>l):\n        QuickSort(tab,l,j)\n    if (i<r):\n        QuickSort(tab,i,r)\narray=[2,5,3,2,6,5]\nprint(QuickSort(array))", "fix": "def QuickSort(tab,l,r):\n    p=tab[int((l+r)/2)]\n    i=l\n    j=r\n    while(i<=j):\n        while (tab[i]<p):\n            i=i+1\n        while (tab[j]>p):\n            j=j-1\n        if (i<=j):\n            tmp=tab[i]\n            tab[i]=tab[j]\n            tab[j]=tmp\n            i=i+1\n            j=j-1\n    if (j>l):\n        QuickSort(tab,l,j)\n    if (i<r):\n        QuickSort(tab,i,r)\narray=[2,5,3,2,6,5]\nprint(QuickSort(array, 0, len(array)-1))", "index": 1331782, "fixIndex": 1331804, "pyVersion": 3, "exceptionSpan": [21, 7, 21, 22], "spanSlice": [[1, 1, 19, 26], [20, 8, 20, 8], [20, 10, 20, 10], [20, 12, 20, 12], [20, 14, 20, 14], [20, 16, 20, 16], [20, 18, 20, 18], [20, 7, 20, 19], [20, 1, 20, 19], [21, 7, 21, 15], [21, 17, 21, 21], [21, 7, 21, 22]], "varTypes": {"array": "LIST"}, "spanTypes": {"(20, 8, 20, 8)": "int", "(20, 10, 20, 10)": "int", "(20, 12, 20, 12)": "int", "(20, 14, 20, 14)": "int", "(20, 16, 20, 16)": "int", "(20, 18, 20, 18)": "int", "(20, 7, 20, 19)": "LIST", "(21, 1, 21, 5)": "FUNCTION", "(21, 7, 21, 15)": "FUNCTION", "(21, 17, 21, 21)": "LIST"}, "errMsg": "TypeError", "ud": {"(21, 7, 21, 15)": [[1, 1, 19, 26]], "(21, 17, 21, 21)": [[20, 7, 20, 19], [20, 1, 20, 19]], "(21, 7, 21, 22)": [[20, 7, 20, 19], [1, 1, 19, 26]]}, "isConsecutive": false, "isFinal": false}
{"bad": "def QuickSort(tab,l,r):\n    p=tab[int((l+r)/2)]\n    i=l\n    j=r\n    while(i<=j):\n        while (tab[i]<p):\n            i=i+1\n        while (tab[j]>p):\n            j=j-1\n        if (i<=j):\n            tmp=tab[i]\n            tab[i]=tab[j]\n            tab[j]=tmp\n            i=i+1\n            j=j-1\n    if (j>l):\n        QuickSort(tab,l,j)\n    if (i<r):\n        QuickSort(tab,i,r)\narray=[2,5,3,2,6,5]\nprint(QuickSort(array, 0, len(array)))", "fix": "def QuickSort(tab,l,r):\n    p=tab[int((l+r)/2)]\n    i=l\n    j=r\n    while(i<=j):\n        while (tab[i]<p):\n            i=i+1\n        while (tab[j]>p):\n            j=j-1\n        if (i<=j):\n            tmp=tab[i]\n            tab[i]=tab[j]\n            tab[j]=tmp\n            i=i+1\n            j=j-1\n    if (j>l):\n        QuickSort(tab,l,j)\n    if (i<r):\n        QuickSort(tab,i,r)\narray=[2,5,3,2,6,5]\nprint(QuickSort(array, 0, len(array)-1))", "index": 1331795, "fixIndex": 1331804, "pyVersion": 3, "exceptionSpan": [8, 16, 8, 21], "spanSlice": [[1, 1, 19, 26], [3, 7, 3, 7], [3, 5, 3, 7], [4, 7, 4, 7], [4, 5, 4, 7], [5, 11, 5, 11], [5, 14, 5, 14], [5, 11, 5, 14], [5, 10, 5, 15], [5, 5, 15, 17], [8, 16, 8, 21], [20, 8, 20, 8], [20, 10, 20, 10], [20, 12, 20, 12], [20, 14, 20, 14], [20, 16, 20, 16], [20, 18, 20, 18], [20, 7, 20, 19], [20, 1, 20, 19], [21, 7, 21, 15], [21, 17, 21, 21], [21, 24, 21, 24], [21, 27, 21, 29], [21, 31, 21, 35], [21, 27, 21, 36], [21, 7, 21, 37]], "varTypes": {"array": "LIST", "p": "int", "i": "int", "j": "int"}, "spanTypes": {"(20, 8, 20, 8)": "int", "(20, 10, 20, 10)": "int", "(20, 12, 20, 12)": "int", "(20, 14, 20, 14)": "int", "(20, 16, 20, 16)": "int", "(20, 18, 20, 18)": "int", "(20, 7, 20, 19)": "LIST", "(21, 1, 21, 5)": "FUNCTION", "(21, 7, 21, 15)": "FUNCTION", "(21, 17, 21, 21)": "LIST", "(21, 24, 21, 24)": "int", "(21, 27, 21, 29)": "FUNCTION", "(21, 31, 21, 35)": "LIST", "(21, 27, 21, 36)": "int", "(2, 7, 2, 9)": "LIST", "(2, 11, 2, 13)": "CLASS", "(2, 16, 2, 16)": "int", "(2, 18, 2, 18)": "int", "(2, 16, 2, 18)": "int", "(2, 15, 2, 19)": "int", "(2, 21, 2, 21)": "int", "(2, 15, 2, 21)": "float", "(2, 11, 2, 22)": "int", "(2, 7, 2, 23)": "int", "(3, 7, 3, 7)": "int", "(4, 7, 4, 7)": "int", "(5, 11, 5, 11)": "int", "(5, 14, 5, 14)": "int", "(5, 11, 5, 14)": "bool", "(5, 10, 5, 15)": "bool", "(6, 16, 6, 18)": "LIST", "(6, 20, 6, 20)": "int", "(6, 16, 6, 21)": "int", "(6, 23, 6, 23)": "int", "(6, 16, 6, 23)": "bool", "(6, 15, 6, 24)": "bool", "(8, 16, 8, 18)": "LIST", "(8, 20, 8, 20)": "int"}, "errMsg": "IndexError", "ud": {"(21, 7, 21, 15)": [[1, 1, 19, 26]], "(21, 17, 21, 21)": [[20, 7, 20, 19], [20, 1, 20, 19]], "(21, 31, 21, 35)": [[20, 7, 20, 19], [20, 1, 20, 19]], "(21, 27, 21, 36)": [[20, 7, 20, 19]], "(21, 7, 21, 37)": [[20, 7, 20, 19], [1, 1, 19, 26], [20, 16, 20, 16]], "(2, 7, 2, 9)": [[20, 7, 20, 19], [21, 7, 21, 37]], "(2, 16, 2, 16)": [[21, 24, 21, 24], [21, 7, 21, 37]], "(2, 18, 2, 18)": [[20, 16, 20, 16], [21, 7, 21, 37]], "(2, 16, 2, 18)": [[21, 24, 21, 24], [20, 16, 20, 16]], "(2, 15, 2, 19)": [[20, 16, 20, 16]], "(2, 15, 2, 21)": [[20, 8, 20, 8], [20, 16, 20, 16]], "(2, 7, 2, 23)": [[20, 8, 20, 8], [20, 12, 20, 12], [20, 7, 20, 19]], "(2, 5, 2, 23)": [[20, 8, 20, 8]], "(3, 7, 3, 7)": [[21, 24, 21, 24], [21, 7, 21, 37]], "(3, 5, 3, 7)": [[21, 24, 21, 24]], "(4, 7, 4, 7)": [[20, 16, 20, 16], [21, 7, 21, 37]], "(4, 5, 4, 7)": [[20, 16, 20, 16]], "(5, 11, 5, 11)": [[21, 24, 21, 24], [3, 5, 3, 7]], "(5, 14, 5, 14)": [[20, 16, 20, 16], [4, 5, 4, 7]], "(5, 11, 5, 14)": [[21, 24, 21, 24], [20, 16, 20, 16]], "(6, 16, 6, 18)": [[20, 7, 20, 19], [21, 7, 21, 37]], "(6, 20, 6, 20)": [[21, 24, 21, 24], [3, 5, 3, 7]], "(6, 16, 6, 21)": [[20, 8, 20, 8], [21, 24, 21, 24], [20, 7, 20, 19]], "(6, 23, 6, 23)": [[2, 5, 2, 23], [20, 8, 20, 8]], "(6, 16, 6, 23)": [[20, 8, 20, 8]], "(8, 16, 8, 18)": [[20, 7, 20, 19], [21, 7, 21, 37]], "(8, 20, 8, 20)": [[20, 16, 20, 16], [4, 5, 4, 7]], "(8, 16, 8, 21)": [[20, 7, 20, 19], [20, 16, 20, 16]]}, "isConsecutive": true, "isFinal": true}
